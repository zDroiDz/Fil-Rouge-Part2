package vueGraphique;

import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JLabel;
import javax.swing.JTextField;
import javax.swing.SpinnerModel;
import javax.swing.SpinnerNumberModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

import control.ControlFiles;
import control.ControlHistorique;
import control.ControlIndexationC;
import control.ControlProfil;
import model.DescripteurTexte;

import javax.swing.JFileChooser;
import javax.swing.JList;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.HashMap;
import java.util.Map;

import javax.swing.DefaultListModel;
import javax.swing.JButton;
import javax.swing.JSpinner;

public class PanRechercheSonComparaisonFichier extends JPanel {
	
	private JTextField textFieldPath = new JTextField();
	JLabel lblFIchierTexte = new JLabel("Recherche fichier : Son");
	private final JLabel lblNomDuFichier = new JLabel("Nom du fichier");
	
	ControlIndexationC controlIndexationC = new ControlIndexationC();
    ControlProfil controlProfil = new ControlProfil();
    ControlHistorique controlHistorique = new ControlHistorique();
	ControlFiles controlFiles = new ControlFiles();
	Map<String, String> resultatHistoriqueTexte = new HashMap<>();

	
	public PanRechercheSonComparaisonFichier() {
		setLayout(null);
		lblFIchierTexte.setFont(new Font("Dialog", Font.BOLD, 20));
		
		lblFIchierTexte.setBounds(251, 46, 373, 15);
		add(lblFIchierTexte);
		
		
		textFieldPath.setBounds(251, 160, 218, 19);
		add(textFieldPath);
		textFieldPath.setColumns(10);
		
		lblNomDuFichier.setBounds(251, 134, 123, 15);
		
		add(lblNomDuFichier);
		
		JLabel lblRsultats = new JLabel("RÃ©sultats");
		lblRsultats.setBounds(251, 216, 70, 15);
		add(lblRsultats);
		
		JButton btnRechercher = new JButton("Rechercher");
		btnRechercher.setBounds(571, 157, 117, 25);
		
		btnRechercher.addActionListener(new ActionListener() {

			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				String resultatSon = controlIndexationC.compareSons(textFieldPath.getText());
				
				/*model.clear();
				resultatHistoriqueTexte.clear();
				
				for(DescripteurTexte d : resultatTexte) {
					model.addElement(d.getNomFichier());
					resultatHistoriqueTexte.put(d.getNomFichier(), d.getPath());
				}
				
				if(FrameClient.profil.isHistorique()) {
					//ajout historique
					String[] separation = textFieldPath.getText().split("/");
					String nom = separation[separation.length-1];
					RequeteRecherche requeteTexte = new RequeteRecherche(nom, FrameClient.profil.getIdentifiant(), "Texte fichier", resultatHistoriqueTexte);
					controlProfil.addHistoricContent(FrameClient.profil,requeteTexte.getStockageBD());
					controlHistorique.FillBDHistorique(FrameClient.profil);
				}*/
			}
			
		});
		
		add(btnRechercher);
		
				
		JButton btnFileChooser = new JButton("......");
		
		btnFileChooser.addActionListener(new ActionListener() {

			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				String chemin = controlFiles.recupTxtOrXMLFile();
				textFieldPath.setText(chemin);
			}
			
		});
				
		btnFileChooser.setBounds(498, 158, 50, 22);
		add(btnFileChooser);
		
		JLabel lblResultats = new JLabel("");
		lblResultats.setBounds(251, 260, 297, 282);
		add(lblResultats);
		
		
	 
	}
}
